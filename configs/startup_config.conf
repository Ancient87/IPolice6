<config name="Detect IP6 exploits">
	<capturers>
		<capturer id="simple_capture">
			<type>
				<eval>capture.SimpleCapturer</eval>
			</type>
			<init>
				<dev>eth0</dev>
			</init>
		</capturer>
	</capturers>
	<modules>
		<module id="DetectRH0">
			<type>
				<eval>baseclasses.IPolice6Module</eval>
			</type>
			<init>
				<name>DetectRoutingHeader0</name>
			</init>
			<checks>
				<check id="RHcheck">
					<type>
						<eval>check_restrict_occurrence.CheckRestrictOccurrence</eval>
					</type>
					<init>
						<layer><eval>scapy.layers.inet6.IPv6ExtHdrRouting</eval></layer>
						<max_occurrence><eval>1</eval></max_occurrence>
				</init>
				</check>
			</checks>
			<actions>
				<action id="screenlogaction_RH0">
					<type>
						<eval>actions.logaction.LogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>

				<action id="syslogaction_RH0">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
			</actions>
		</module>

		<module id="DetectHBHDos">
			<type>
				<eval>baseclasses.IPolice6Module</eval>
			</type>
			<init>
				<name>DetectHBHDos</name>
			</init>
			<checks>
				<check id="HBHoptcheck">
					<type>
						<eval>check_restrict_occurrence.CheckRestrictOccurrence</eval>
					</type>
					<init>
						<layer><eval>scapy.layers.inet6.IPv6ExtHdrHopByHop</eval></layer>
						<max_occurrence><eval>3</eval></max_occurrence>
					</init>
				</check>
			</checks>
			<actions>
				<action id="screenlogaction_HBH">
					<type>
						<eval>actions.logaction.LogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>

				<action id="syslogaction_HBH">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
			</actions>
		</module>
		<module id="DetectRedir6">
			<type>
				<eval>thcdetect.DetectRedir6</eval>
			</type>
		</module>
		<module id="DetectParasite6">
			<type>
				<eval>thcdetect.DetectParasite6</eval>
			</type>
			<actions>
				<action id="syslogaction_parasite">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>

			</actions>
		</module>
		<module id="DetectDosNewIp6">
			<type>
				<eval>thcdetect.DetectDosNewIp6</eval>
			</type>
			<actions>
				<action id="screenlogaction_DAD">
					<type>
						<eval>actions.logaction.LogAction</eval>
					</type>
				</action>
				<action id="syslogaction_DAD">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
			</actions>
		</module>
		<module id="DetectAlive6">
			<type>
				<eval>baseclasses.IPolice6Module</eval>
			</type>
			<init>
				<name>alive6 detector</name>
				<description>Checks for attempts to ping the all node multicast address </description>
			</init>
			<checks>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type> 
					<init>
						<name>All node multicast check</name>
						<field>dst</field>
						<value>ff02::1</value>
						<layer><eval>scapy.layers.inet6.IPv6</eval></layer>
					</init>
				</check>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type> 
					<init>
						<name>All node multicast ping check</name>
						<layer><eval>scapy.layers.inet6.ICMPv6EchoRequest</eval></layer>
					</init>
				</check>

			</checks>
			<actions>
				<action id="syslogaction_alive">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
				<action id="screenlogaction_alive">
					<type>
						<eval>actions.logaction.LogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
			</actions>
		</module>
		<module id="DetectFakeRouter6">
			<type>
				<eval>baseclasses.IPolice6Module</eval>
			</type>
			<init>
				<name>Fake router detect</name>
			</init>
			<checks>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type>
					<init>
						<name>Check prefix valid</name>
						<field>prefix</field>
						<value><eval>util.get_ip6_prefix()</eval></value>
						<layer><eval>scapy.layers.inet6.ICMPv6NDOptPrefixInfo</eval></layer>
						<action_fail><eval>IMMEDIATE_POSITIVE</eval></action_fail>
						<action_pass><eval>CONTINUE</eval></action_pass>
					</init>
				</check>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type>
					<init>
						<name>Check non counter</name>
						<field>routerlifetime</field>
						<value><eval>0</eval></value>
						<layer><eval>scapy.layers.inet6.ICMPv6ND_RA</eval></layer>
						<action_fail><eval>CONTINUE</eval></action_fail>
						<action_pass><eval>IMMEDIATE_NEGATIVE</eval></action_pass>
					</init>
				</check>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type>
					<init>
						<name>Check valid mac</name>
						<layer><eval>scapy.layers.inet6.ICMPv6NDOptSrcLLAddr</eval></layer>
						<field>lladdr</field>
i						<testValues><eval>['08:00:27:79:92:83', '00:14:1b:3d:2c:00']</eval></testValues>
						<action_fail><eval>IMMEDIATE_POSITIVE</eval></action_fail> 
						<action_pass><eval>IMMEDIATE_NEGATIVE</eval></action_pass>
					</init>
				</check>
			</checks>
			<actions> 
				<action id="screenlogaction_fakerouter">
					<type>
						<eval>actions.logaction.LogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
				<action id="syslogaction_fakerouter">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
				<action id="counterraaction">
					<type>
						<eval>actions.counter_ra_action.CounterRAaction</eval>
					</type>
				</action>
			</actions>
		</module>	
		<module id="DetectTHCSignature">
			<type>
				<eval>baseclasses.IPolice6Module</eval>
			</type>
			<init>
				<name>THC attack detect</name>
				<description>This checks for presence of dead beef</description>
			</init>
			<checks>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type>
					<init>
						<name>dead check</name>
						<field>id</field>
						<value><eval>int("0xdead",0)</eval></value>
						<layer><eval>scapy.layers.inet6.ICMPv6EchoRequest</eval></layer>
					</init>
				</check>
				<check>
					<type>
						<eval>checks.generic_field_check.GenericFieldCheck</eval>
					</type> 
					<init>
						<name>beef check</name>
						<field>seq</field>
						<value><eval>int("0xbeef",0)</eval></value>
						<layer><eval>scapy.layers.inet6.ICMPv6EchoRequest</eval></layer>
					</init>
				</check>
			</checks>

			<actions> 
				<action id="syslogaction_thc">
					<type>
						<eval>actions.syslogaction.SysLogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
				<action id="screenlogaction_thc">
					<type>
						<eval>actions.logaction.LogAction</eval>
					</type>
					<init>
						 
					</init>
				</action>
			</actions>
			<modules>
			</modules>
		</module>
	</modules>
</config>
